<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!--                                                                  -->
    <!-- macros for continuous track simulation by segmentation approach  -->
    <!--   * track is built from multiple segments                        -->
    <!--   * a segment is rotational or translational                     -->
    <!--   * a rotational segment;                                        -->
    <!--        * corresponds a round part of the track                   -->
    <!--        * can be represented by a wheel link and axle joint       -->
    <!--   * a translational segment;                                     -->
    <!--        * corresponds a straight part of the track                -->
    <!--        * can be represented by a board link and slider joint     -->
    <!--                                                                  -->

    <!-- macros for populating general links/joints -->

    <xacro:macro name="populate_links" params="name_prefix x y z roll pitch yaw dx dy dz droll dpitch dyaw i:=1 count **template">
        <xacro:if value="${i &lt;= count}">
            <gazebo>
                <link name="${name_prefix}${i}">
                    <pose>${x} ${y} ${z} ${roll} ${pitch} ${yaw}</pose>
                    <xacro:insert_block name="template" />
                </link>
            </gazebo>
            <xacro:populate_links name_prefix="${name_prefix}" x="${x+dx}" y="${y+dy}" z="${z+dz}" roll="${roll+droll}" pitch="${pitch+dpitch}" yaw="${yaw+dyaw}" dx="${dx}" dy="${dy}" dz="${dz}" droll="${droll}" dpitch="${dpitch}" dyaw="${dyaw}" i="${i+1}" count="${count}">
                <template>
                    <xacro:insert_block name="template" />
                </template>
            </xacro:populate_links>
        </xacro:if>
    </xacro:macro>

    <xacro:macro name="populate_joints" params="name_prefix type child_prefix i:=1 count **template">
        <xacro:if value="${i &lt;= count}">
            <gazebo>
                <joint name="${name_prefix}${i}" type="${type}">
                    <child>${child_prefix}${i}</child>
                    <xacro:insert_block name="template" />
                </joint>
            </gazebo>
            <xacro:populate_joints name_prefix="${name_prefix}" type="${type}" child_prefix="${child_prefix}" i="${i+1}" count="${count}">
                <template>
                    <xacro:insert_block name="template" />
                </template>
            </xacro:populate_joints>
        </xacro:if>
    </xacro:macro>

    <!-- macros which expand to inertial/collision/visual -->

    <xacro:macro name="make_cylinder_inertial" params="pose:='0 0 0 0 0 0' mass length radius">
        <inertial>
            <pose>${pose}</pose>
            <mass>${mass}</mass>
            <inertia>
                <ixx>${mass * (radius * radius / 4 + length * length / 12)}</ixx>
                <ixy>0</ixy>
                <ixz>0</ixz>
                <iyy>${mass * (radius * radius / 4 + length * length / 12)}</iyy>
                <iyz>0</iyz>
                <izz>${mass * radius * radius / 2}</izz>
            </inertia>
        </inertial>
    </xacro:macro>

    <xacro:macro name="make_cylinder_collision" params="name:='collision' pose:='0 0 0 0 0 0' length radius mu:=0.5 min_depth:=0.01">
        <collision name="${name}">
            <pose>${pose}</pose>
            <geometry>
                <cylinder>
                    <length>${length}</length>
                    <radius>${radius}</radius>
                </cylinder>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>${mu}</mu>
                        <mu2>${mu}</mu2>
                    </ode>
                </friction>
                <contact>
                    <ode>
                        <min_depth>${min_depth}</min_depth>
                    </ode>
                </contact>
            </surface>
        </collision>
    </xacro:macro>

    <xacro:macro name="make_cylinder_visual" params="name:='visual' pose:='0 0 0 0 0 0' length radius *material">
        <visual name="${name}">
            <pose>${pose}</pose>
            <geometry>
                <cylinder>
                    <length>${length}</length>
                    <radius>${radius}</radius>
                </cylinder>
            </geometry>
            <xacro:insert_block name="material" />
        </visual>
    </xacro:macro>

    <xacro:macro name="make_box_inertial" params="pose:='0 0 0 0 0 0' mass size_x size_y size_z">
        <inertial>
            <pose>${pose}</pose>
            <mass>${mass}</mass>
            <inertia>
                <ixx>${mass * (size_y * size_y + size_z * size_z) / 12}</ixx>
                <ixy>0</ixy>
                <ixz>0</ixz>
                <iyy>${mass * (size_z * size_z + size_x * size_x) / 12}</iyy>
                <iyz>0</iyz>
                <izz>${mass * (size_x * size_x + size_y * size_y) / 12}</izz>
            </inertia>
        </inertial>
    </xacro:macro>

    <xacro:macro name="make_box_collision" params="name:='collision' pose:='0 0 0 0 0 0' size mu:=0.5 min_depth:=0.01">
        <collision name="${name}">
            <pose>${pose}</pose>
            <geometry>
                <box>
                    <size>${size}</size>
                </box>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>${mu}</mu>
                        <mu2>${mu}</mu2>
                    </ode>
                </friction>
                <contact>
                    <ode>
                        <min_depth>${min_depth}</min_depth>
                    </ode>
                </contact>
            </surface>
        </collision>
    </xacro:macro>

    <xacro:macro name="make_box_visual" params="name:='visual' pose:='0 0 0 0 0 0' size *material">
        <visual name="${name}">
            <pose>${pose}</pose>
            <geometry>
                <box>
                    <size>${size}</size>
                </box>
            </geometry>
            <xacro:insert_block name="material" />
        </visual>
    </xacro:macro>

    <!-- rotational segment templates which can be used with above population macros -->

    <xacro:macro name="make_wheel_template" params="mass length radius mu min_depth">
        <xacro:make_cylinder_inertial pose="0 0 0 ${pi / 2} 0 0" mass="${mass}" length="${length}" radius="${radius}" />
        <xacro:make_cylinder_collision pose="0 0 0 ${pi / 2} 0 0" length="${length}" radius="${radius}" mu="${mu}" min_depth="${min_depth}" />
    </xacro:macro>

    <xacro:macro name="make_axle_template" params="parent implicit_spring_damper">
        <parent>${parent}</parent>
        <axis>
            <xyz>0 1 0</xyz>
            <!-- use the joint frame, which defaults to the child link axis, to decsribe the axis. -->
            <!-- if the child link is made from the above wheel template,                          -->
            <!-- the axis matches the center line of the cylinder                                  -->
            <use_parent_model_frame>0</use_parent_model_frame>
        </axis>
        <physics>
            <ode>
                <implicit_spring_damper>${implicit_spring_damper}</implicit_spring_damper>
            </ode>
        </physics>
    </xacro:macro>

    <!-- translational segment templates which can be used with above population macros -->

    <xacro:macro name="make_board_template" params="mass size_x size_y size_z mu min_depth">
        <xacro:make_box_inertial mass="${mass}" size_x="${size_x}" size_y="${size_y}" size_z="${size_z}" />
        <xacro:make_box_collision size="${size_x} ${size_y} ${size_z}" mu="${mu}" min_depth="${min_depth}" />
    </xacro:macro>

    <xacro:macro name="make_slider_template" params="parent implicit_spring_damper">
        <parent>${parent}</parent>
        <axis>
            <xyz>1 0 0</xyz>
            <!-- use the joint frame, which defaults to the child link axis, to decsribe the axis. -->
            <!-- if the child link is made from the above board template,                          -->
            <!-- the axis matches the front direction of the board                                 -->
            <use_parent_model_frame>0</use_parent_model_frame>
        </axis>
        <physics>
            <ode>
                <implicit_spring_damper>${implicit_spring_damper}</implicit_spring_damper>
            </ode>
        </physics>
    </xacro:macro>

    <!-- macros for populating rotational/translational segments with above macros and templates -->

    <xacro:macro name="populate_wheels" params="name_prefix x:=0 y:=0 z:=0 roll:=0 pitch:=0 yaw:=0 dx:=0 dy:=0 dz:=0 droll:=0 dpitch:=0 dyaw:=0 mass length radius mu:=0.5 min_depth:=0.01 count">
        <xacro:populate_links name_prefix="${name_prefix}" x="${x}" y="${y}" z="${z}" roll="${roll}" pitch="${pitch}" yaw="${yaw}" dx="${dx}" dy="${dy}" dz="${dz}" droll="${droll}" dpitch="${dpitch}" dyaw="${dyaw}" count="${count}">
            <template>
                <xacro:make_wheel_template mass="${mass}" length="${length}" radius="${radius}" mu="${mu}" min_depth="${min_depth}" />
            </template>
        </xacro:populate_links>
    </xacro:macro>

    <xacro:macro name="populate_axles" params="name_prefix parent child_prefix implicit_spring_damper:=1 count">
        <xacro:populate_joints name_prefix="${name_prefix}" type="revolute" child_prefix="${child_prefix}" count="${count}">
            <template>
                <xacro:make_axle_template parent="${parent}" implicit_spring_damper="${implicit_spring_damper}" />
            </template>
        </xacro:populate_joints>
    </xacro:macro>

    <xacro:macro name="populate_boards" params="name_prefix x:=0 y:=0 z:=0 roll:=0 pitch:=0 yaw:=0 dx:=0 dy:=0 dz:=0 droll:=0 dpitch:=0 dyaw:=0 mass size_x size_y size_z mu:=0.5 min_depth:=0.01 count">
        <xacro:populate_links name_prefix="${name_prefix}" x="${x}" y="${y}" z="${z}" roll="${roll}" pitch="${pitch}" yaw="${yaw}" dx="${dx}" dy="${dy}" dz="${dz}" droll="${droll}" dpitch="${dpitch}" dyaw="${dyaw}" count="${count}">
            <template>
                <xacro:make_board_template mass="${mass}" size_x="${size_x}" size_y="${size_y}" size_z="${size_z}" mu="${mu}" min_depth="${min_depth}" />
            </template>
        </xacro:populate_links>
    </xacro:macro>

    <xacro:macro name="populate_sliders" params="name_prefix parent child_prefix implicit_spring_damper:=1 count">
        <xacro:populate_joints name_prefix="${name_prefix}" type="prismatic" child_prefix="${child_prefix}" count="${count}">
            <template>
                <xacro:make_slider_template parent="${parent}" implicit_spring_damper="${implicit_spring_damper}" />
            </template>
        </xacro:populate_joints>
    </xacro:macro>

</robot>